# ===============================================
# POKEMON CARD ORDER PLANNING SYSTEM
# Default Configuration (SAFE FOR GIT)
# ===============================================
#
# IMPORTANT: This file contains NO sensitive credentials
# For local development, create application-local.properties
# For production, use environment variables or Kubernetes secrets
#

# Application
spring.application.name=pokemon-card-planning
server.port=${SERVER_PORT:8080}

# Database Configuration
# Uses environment variables with safe defaults for development
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Connection Pool
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${HIKARI_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:1800000}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}

# Liquibase Configuration
spring.liquibase.enabled=${LIQUIBASE_ENABLED:true}
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yml
spring.liquibase.contexts=${LIQUIBASE_CONTEXTS:development}
spring.liquibase.drop-first=false
spring.liquibase.default-schema=${DATABASE_SCHEMA:dev}

# CORS Configuration
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false

# Logging Configuration
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.pcagrade=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:WARN}
logging.level.liquibase=${LOG_LEVEL_LIQUIBASE:INFO}

# Error handling
server.error.include-stacktrace=never
server.error.include-message=always

# Pokemon Card Planning Configuration
planning.card.processing.time=${CARD_PROCESSING_TIME:3}
planning.employee.break.time=${EMPLOYEE_BREAK_TIME:15}
planning.workday.start=${WORKDAY_START:08:00}
planning.workday.end=${WORKDAY_END:17:00}

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=${HEALTH_DETAILS:when-authorized}
management.endpoint.health.probes.enabled=true
management.health.readiness-state.enabled=true
management.health.liveness-state.enabled=true

# Order table compatibility settings
order.table.readonly=${ORDER_TABLE_READONLY:true}
order.status.integer.mapping=${ORDER_STATUS_INTEGER_MAPPING:true}
order.adapter.service.enabled=${ORDER_ADAPTER_ENABLED:true}

# ===============================================
# PROFILE-SPECIFIC CONFIGURATION
# ===============================================
#
# Local development: application-local.properties (not in Git)
# Docker: application-docker.properties
# Kubernetes: application-kubernetes.properties
#
# profile
spring.profiles.active=local

