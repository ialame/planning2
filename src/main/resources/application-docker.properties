# ========== POKEMON CARD ORDER PLANNING SYSTEM - DOCKER PROFILE ==========
# Configuration for Docker deployment

# Application
spring.application.name=pokemon-card-planning
server.port=8080

# Database Configuration - UPDATED for dev-planning
spring.datasource.url=jdbc:mariadb://database:3306/dev-planning?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=false
spring.datasource.username=ia
spring.datasource.password=foufafou
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

# Connection Pool - Docker optimized
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate Configuration - Docker safe mode
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Liquibase Configuration - DISABLED (tables already created)
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yml
spring.liquibase.contexts=docker
spring.liquibase.drop-first=false
spring.liquibase.default-schema=dev-planning

# CORS Configuration - Docker network
spring.web.cors.allowed-origins=http://frontend:3000,http://localhost:3000,http://127.0.0.1:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false

# Logging Configuration - Docker
logging.level.root=INFO
logging.level.com.pcagrade=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.liquibase=INFO

# Error handling
server.error.include-stacktrace=never
server.error.include-message=always

# Pokemon Card Processing Configuration
planning.card.processing.time=3
planning.employee.break.time=15
planning.workday.start=08:00
planning.workday.end=17:00

# Management endpoints - Docker health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.readiness-state.enabled=true
management.health.liveness-state.enabled=true

# Order table compatibility settings
order.table.readonly=true
order.status.integer.mapping=true
order.adapter.service.enabled=true
order.table.modification.warning=false